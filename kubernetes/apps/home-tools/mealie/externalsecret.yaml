---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: &name mealie-secret
spec: # TODO Postgres
  # secretStoreRef:
    # kind: ClusterSecretStore
    # name: bitwarden
  target:
    name: *name
    template:
      data:
        # Oidc
        OIDC_AUTH_ENABLED: "true"
        OIDC_SIGNUP_ENABLED: "true"
        OIDC_CONFIGURATION_URL: "https://sso.vzkn.eu/application/o/mealie/.well-known/openid-configuration"
        OIDC_CLIENT_ID: "{{ .MEALIE_CLIENT_ID }}"
        OIDC_CLIENT_SECRET: "{{ .MEALIE_CLIENT_SECRET }}"
        OIDC_USER_GROUP: "Home"
        OIDC_ADMIN_GROUP: "authentik Admins"
        OIDC_AUTO_REDIRECT: "true"
        OIDC_PROVIDER_NAME: "Authentik"
        OIDC_REMEMBER_ME: "true"
        # DB # TODO Postgres RM
        POSTGRES_DB: "{{ .dbname }}"
        POSTGRES_SERVER: "{{ .host }}" #pgBouncer is set to session for Grafana, and Authentik requires transaction
        POSTGRES_PORT: "5432"
        POSTGRES_USER: "{{ .user }}"
        POSTGRES_PASSWORD: "{{ .password }}"
        # Email
        SMTP_HOST: "{{ .SMTP_HOST }}"
        SMTP_PORT: "587"
        SMTP_USER: "{{ .SMTP_USER }}"
        SMTP_PASSWORD: "{{ .SMTP_PASS }}"
        SMTP_AUTH_STRATEGY: "TLS"
        SMTP_FROM_EMAIL: "admin@vzkn.eu"
        # OpenAI
        OPENAI_API_KEY: "{{ .MEALIE_OPENAI_API }}"
        OPENAI_SEND_DATABASE_DATA: "false"
  dataFrom:
    - extract:
        key: mealie
      sourceRef: # TODO Postgres RM
        storeRef:
          kind: ClusterSecretStore
          name: bitwarden
    - extract:
        key: protonmail
      sourceRef: # TODO Postgres RM
        storeRef:
          kind: ClusterSecretStore
          name: bitwarden
    - extract: # TODO Postgres RM
        key: postgres-pguser-mealie
      sourceRef:
        storeRef:
          kind: ClusterSecretStore
          name: crunchy-postgres
