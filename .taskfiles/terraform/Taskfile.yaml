---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: '3'

set: [pipefail]

vars:
  TERRAFORM_DIR: '{{.ROOT_DIR}}/terraform'

tasks:

  fmt:
    desc: Format all Terraform files
    cmd: |
      echo "Formatting Terraform files..."
      find {{.TERRAFORM_DIR}} -name "*.tf" -exec terraform fmt {} \;
      echo "Terraform formatting complete!"

  validate:
    desc: Validate all Terraform configurations
    cmd: |
      echo "Validating Terraform configurations..."
      for dir in {{.TERRAFORM_DIR}}/*/; do
        if [ -f "$dir/main.tf" ]; then
          echo "Validating $dir..."
          (cd "$dir" && terraform init -backend=false && terraform validate)
        fi
      done
      echo "Terraform validation complete!"

  docs:
    desc: Generate documentation for Terraform modules
    cmd: |
      echo "Generating Terraform documentation..."
      for dir in {{.TERRAFORM_DIR}}/*/; do
        if [ -f "$dir/main.tf" ]; then
          echo "Generating docs for $dir..."
          (cd "$dir" && terraform-docs markdown table --output-file README.md .)
        fi
      done
      echo "Documentation generation complete!"
    preconditions:
      - sh: command -v terraform-docs
        msg: 'terraform-docs not found. Install with: task workstation:brew'

  lint:
    desc: Run tflint on all Terraform configurations
    cmd: |
      echo "Linting Terraform configurations..."
      for dir in {{.TERRAFORM_DIR}}/*/; do
        if [ -f "$dir/main.tf" ]; then
          echo "Linting $dir..."
          (cd "$dir" && tflint)
        fi
      done
      echo "Terraform linting complete!"
    preconditions:
      - sh: command -v tflint
        msg: 'tflint not found. Install with: task workstation:brew'

  clean:
    desc: Clean up Terraform temporary files
    cmd: |
      echo "Cleaning up Terraform files..."
      find {{.TERRAFORM_DIR}} -name ".terraform" -type d -exec rm -rf {} + 2>/dev/null || true
      find {{.TERRAFORM_DIR}} -name ".terraform.lock.hcl" -delete 2>/dev/null || true
      find {{.TERRAFORM_DIR}} -name "terraform.tfstate*" -delete 2>/dev/null || true
      echo "Cleanup complete!"

  check:
    desc: Run all checks (format, validate, lint)
    deps: [fmt, validate, lint]
    cmd: echo "All Terraform checks completed successfully!"
