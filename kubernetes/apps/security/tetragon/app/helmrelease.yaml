---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1.json
apiVersion: source.toolkit.fluxcd.io/v1
kind: HelmRepository
metadata:
  name: cilium
spec:
  interval: 12h
  url: https://helm.cilium.io
---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: tetragon
spec:
  interval: 30m
  chart:
    spec:
      chart: tetragon
      version: 1.6.0
      sourceRef:
        kind: HelmRepository
        name: cilium
      interval: 12h
  values:
    # Tetragon MUST run on host network for proper process visibility
    hostNetwork: true
    dnsPolicy: Default  # Use node's DNS for external resolution

    priorityClassName: system-node-critical

    # Export directory for JSON logs
    exportDirectory: /var/run/cilium/tetragon

    # Tolerate all taints (runs on all nodes including control-plane)
    tolerations:
      - operator: Exists

    tetragon:
      enabled: true
      image:
        repository: quay.io/cilium/tetragon
        tag: v1.6.0

      # Enhanced observability
      debug: false
      enableK8sAPI: true          # Associate events with K8s pods
      enableCiliumAPI: true        # Associate events with Cilium endpoints
      enableProcessCred: true      # Capabilities visibility
      enableProcessNs: true        # Namespaces visibility

      # Cluster identification
      clusterName: main

      # Process cache for ancestor tracking
      processCacheSize: 65536
      processCacheGCInterval: 30s

      # Event cache retry configuration
      eventCacheRetries: 15
      eventCacheRetryDelay: 2

      # JSON export configuration
      exportFilename: tetragon.log
      exportFilePerm: "640"  # Allow read by log collectors
      exportFileMaxSizeMB: 10
      exportFileMaxBackups: 5
      exportFileCompress: true
      exportRateLimit: -1  # No rate limit

      # Export only relevant events (reduce noise)
      exportAllowList: |-
        {"event_set":["PROCESS_EXEC", "PROCESS_EXIT", "PROCESS_KPROBE", "PROCESS_TRACEPOINT"]}

      # Exclude noise from system namespaces and health checks
      exportDenyList: |-
        {"health_check":true}
        {"namespace":["", "cilium", "kube-system"]}

      # Field filters (empty = include all fields)
      fieldFilters: |-
        {}

      # Redact sensitive data (passwords, tokens, API keys)
      redactionFilters: |-
        {"redact": ["--password(?:\\s+|=)(\\S*)"]}
        {"redact": ["--token(?:\\s+|=)(\\S*)"]}
        {"redact": ["-p(?:\\s+|=)(\\S*)"]}
        {"redact": ["Bearer\\s+(\\S+)"]}
        {"redact": ["api[_-]?key(?:\\s+|=)(\\S*)"]}
        {"redact": ["secret(?:\\s+|=)(\\S*)"]}

      # Prometheus metrics
      prometheus:
        enabled: true
        address: ""  # All interfaces
        port: 2112
        metricsLabelFilter: "namespace,workload,pod,binary"
        serviceMonitor:
          enabled: true
          scrapeInterval: 60s
          extraLabels:
            release: kube-prometheus-stack

      # gRPC API for tetra CLI
      grpc:
        enabled: true
        address: "localhost:54321"

      # gops debugging interface
      gops:
        enabled: true
        address: "localhost"
        port: 8118

      # Health checks via gRPC
      healthGrpc:
        enabled: true
        port: 6789
        interval: 10

      # Policy filtering (required for namespace/pod label filtering)
      enablePolicyFilter: true
      enablePolicyFilterDebug: false

      # Message handling latency monitoring
      enableMsgHandlingLatency: false

      # Host proc filesystem path
      hostProcPath: /proc

      # Resources
      resources:
        limits:
          memory: 2Gi
        requests:
          cpu: 100m
          memory: 512Mi

      # Security context (privileged required for eBPF)
      securityContext:
        privileged: true

    tetragonOperator:
      enabled: true
      replicas: 1

      image:
        repository: quay.io/cilium/tetragon-operator
        tag: v1.6.0

      # Resources
      resources:
        limits:
          cpu: 500m
          memory: 128Mi
        requests:
          cpu: 10m
          memory: 64Mi

      # Security context (non-privileged)
      containerSecurityContext:
        runAsUser: 65532
        runAsGroup: 65532
        runAsNonRoot: true
        allowPrivilegeEscalation: false
        capabilities:
          drop:
            - ALL

      # High availability strategy
      strategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 1
          maxUnavailable: 0

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: tetragon-operator

      # CRD management
      tracingPolicy:
        enabled: true

      podInfo:
        enabled: false

      forceUpdateCRDs: false

      # Prometheus metrics
      prometheus:
        enabled: true
        address: ""
        port: 2113
        serviceMonitor:
          enabled: true
          scrapeInterval: 60s
          extraLabels:
            prometheus.io/scrape: "true"

    # Export configuration
    export:
      mode: stdout
      filenames:
        - tetragon.log

      stdout:
        enabledCommand: true
        enabledArgs: true
        image:
          repository: quay.io/cilium/hubble-export-stdout
          tag: v1.1.0
        resources:
          limits:
            memory: 256Mi
          requests:
            cpu: 10m
            memory: 128Mi

    # CRDs installation via operator
    crds:
      installMethod: operator

    # Runtime hooks (disabled - not needed for most use cases)
    rthooks:
      enabled: false
