---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app i40e-tune
spec:
  interval: 5m
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      i40e-tune:
        type: daemonset
        pod:
          automountServiceAccountToken: false
          enableServiceLinks: false
          hostNetwork: true
          hostPID: true
          nodeSelector:
            feature.node.kubernetes.io/custom-i40e: "true"
        containers:
          app:
            image:
              repository: ghcr.io/nicolaka/netshoot
              tag: v0.13@sha256:a20c2531bf35436ed3766cd6cfe89d352b050ccc4d7005ce6400adf97503da1b
            command: ["/bin/bash", "-c"]
            args:
              - |
                find /sys/class/net/*/device/driver/module/drivers -maxdepth 1 -path "*i40e*" | awk -F'/' '{print $5}' | xargs -I% nsenter --mount=/host/proc/$(pidof /usr/local/bin/kubelet)/ns/mnt --net=/host/proc/$(pidof /usr/local/bin/kubelet)/ns/net -- sh -c "
                echo '=== Tuning % (i40e) ===';

                # Only increase rings if not already at max
                CURRENT_RX=\$(ethtool -g % | awk '/RX:/ {getline; print \$2}');
                MAX_RX=\$(ethtool -g % | awk '/Pre-set maximums/ {getline; print \$2}');
                if [ \$CURRENT_RX -lt \$MAX_RX ]; then
                  echo 'Increasing rings from '\$CURRENT_RX' to '\$MAX_RX;
                  ethtool -G % rx \$MAX_RX tx \$MAX_RX || echo 'Ring change failed';
                else
                  echo 'Rings already at max ('\$MAX_RX')';
                fi;

                # Only modify coalescing if adaptive is off
                ADAPTIVE=\$(ethtool -c % | awk '/Adaptive RX:/ {print \$3}');
                if [ \$ADAPTIVE == 'on' ]; then
                  echo 'Coalescing in adaptive mode - skipping modification';
                else
                  echo 'Setting coalescing: rx-usecs 32 tx-usecs 32';
                  ethtool -C % rx-usecs 32 tx-usecs 32 || echo 'Coalescing change failed';
                fi;

                echo '=== Final Settings ===';
                ethtool -g % | grep -E 'RX|TX';
                ethtool -c % | grep -E 'Adaptive|usecs';
                echo '====================='
                " &&
                sleep infinity
            securityContext:
              privileged: true
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 10Mi
    persistence:
      procfs:
        type: hostPath
        hostPath: /proc
        hostPathType: Directory
        globalMounts:
          - path: /host/proc
            readOnly: true
      netfs:
        type: hostPath
        hostPath: /sys
        hostPathType: Directory
        globalMounts:
          - path: /host/net
            readOnly: true
