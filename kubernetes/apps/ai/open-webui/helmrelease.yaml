---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-webui
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      open-webui:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.33@sha256:133c51d50defc253251150a89dfbe6d55b797a630ac44a644394d01fc80b6225
            env:
              ENABLE_CHANNELS: true
              # Ollama
              ENABLE_FORWARD_USER_INFO_HEADERS: true
              ENABLE_OLLAMA_API: true
              OLLAMA_BASE_URL: http://aincrad.home.vzkn.eu:11434
              ENABLE_RAG_WEB_SEARCH: true
              ENABLE_SEARCH_QUERY: true
              # RAG_EMBEDDING_ENGINE: sentence-transformers
              # RAG_EMBEDDING_MODEL: BAAI/bge-small-en-v1.5
              RAG_WEB_SEARCH_ENGINE: searxng
              SEARXNG_QUERY_URL: http://searxng:8080/search?q=<query>
              ENABLE_WEBSOCKET_SUPPORT: "true"
              WEBSOCKET_MANAGER: "redis"
              WEBSOCKET_REDIS_URL: redis://open-webui-dragonfly:6379
              DATABASE_URL:
                valueFrom:
                  secretKeyRef:
                    name: open-webui-pguser-open-webui
                    key: pgbouncer-uri
            envFrom:
              - secretRef:
                  name: *app
            # TODO: Add probes for health checks
            # probes:
            #   liveness: &probes
            #     enabled: true
            #     custom: true
            #     spec:
            #       httpGet:
            #         path: /health
            #         port: 8080
            #       initialDelaySeconds: 0
            #       periodSeconds: 10
            #       timeoutSeconds: 1
            #       failureThreshold: 3
            #   readiness: *probes
            # TODO: Add securityContext for container security
            # securityContext:
            #   allowPrivilegeEscalation: false
            #   readOnlyRootFilesystem: true
            #   capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 250m
                memory: 1Gi
              limits:
                memory: 2Gi
    # TODO: Add defaultPodOptions for pod-level security
    # defaultPodOptions:
    #   securityContext:
    #     runAsNonRoot: true
    #     runAsUser: 568
    #     runAsGroup: 568
    #     fsGroup: 568
    #     fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: &port 8080
    route:
      app:
        hostnames:
          - "{{ .Release.Name }}.vzkn.eu"
          - chat.vzkn.eu
        parentRefs:
          - name: envoy-external
            namespace: network
            sectionName: https
    persistence:
      config:
        enabled: true
        existingClaim: *app
        globalMounts:
          - path: /app/backend/data
