---
# yaml-language-server: $schema=https://kube-schemas.pages.dev/source.toolkit.fluxcd.io/helmrepository_v1beta2.json
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: gitea-charts
  namespace: development
spec:
  interval: 1h
  url: https://dl.gitea.io/charts/
---
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app gitea
spec:
  interval: 15m
  chart:
    spec:
      # renovate: registryUrl=https://dl.gitea.io/charts/
      chart: gitea
      version: 12.1.0
      sourceRef:
        kind: HelmRepository
        name: gitea-charts
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    replicaCount: 1
    strategy:
      type: "RollingUpdate"
      rollingUpdate:
        maxSurge: "100%"
        maxUnavailable: 0
    #clusterDomain: cluster.local
    image:
      repository: gitea/gitea
      tag: 1.24.2
      digest: sha256:8e2e3f40c5ff3fee920c6d0faac0db9cca2183d80ff23965d1022434d37e7910
      pullPolicy: IfNotPresent
      rootless: true

    podSecurityContext:
      fsGroup: 100

    containerSecurityContext:
      runAsUser: 1000
      runAsGroup: 100
      runAsNonRoot: true
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      capabilities:
        add: ["SYS_CHROOT"]

    service:
      annotations:
        prometheus.io/probe: "true"
        prometheus.io/protocol: "tcp"
      http:
        port: &port 3000
      ssh:
        type: LoadBalancer
        port: 22
        externalTrafficPolicy: Local
        externalIPs:
          - "10.10.0.41"
          - "::ffff:10.10.0.41"

    ingress:
      enabled: false

    resources:
      requests:
        cpu: 10m
        memory: 128Mi
      limits:
        cpu: 1
        memory: 4Gi

    # deployment:
    #   env: # Additional environment variables to pass to containers
    #     []
    #     # - name: VARIABLE
    #     #   value: my-value
    #   terminationGracePeriodSeconds: 60

    persistence:
      enabled: false
      claimName: *app
      accessModes: ["ReadWriteOnce"]

    gitea:
      admin:
        existingSecret:
        passwordMode: keepUpdated
      config:
        APP_NAME: Gitea Server
        server:
          DOMAIN: gitea.vzkn.eu
          ROOT_URL: https://gitea.vzkn.eu
          DISABLE_SSH: false
          SSH_DOMAIN: gitea.vzkn.eu
          SSH_PORT: 22
          #SSH_LISTEN_PORT: 2222
          ENABLE_GZIP: true
          LFS_START_SERVER: true
        database:
          DB_TYPE: postgres
          HOST: gitea-pgbouncer
          NAME: gitea
          USER: gitea
          SSL_MODE: disable
        indexer:
          REPO_INDEXER_ENABLED: true
          REPO_INDEXER_REPO_TYPES: sources,forks,mirrors,templates
        queue:
          TYPE: redis
          CONN_STR: redis://gitea-dragonfly:6379
        security:
          # INSTALL_LOCK: true
          PASSWORD_HASH_ALGO: argon2
          PASSWORD_COMPLEXITY: lower,upper,digit,spec
          PASSWORD_CHECK_PWN: true
        openid:
          USERNAME: preferred_username
          UPDATE_AVATAR: true
        service:
          REGISTER_EMAIL_CONFIRM: true
          DISABLE_REGISTRATION: false
          ENABLE_NOTIFY_MAIL: true
          ENABLE_CAPTCHA: true
          REQUIRE_CAPTCHA_FOR_LOGIN: true
          CAPTCHA_TYPE: cfturnstile
          DEFAULT_KEEP_EMAIL_PRIVATE: true
          SHOW_REGISTRATION_BUTTON: true
          VALID_SITE_URL_SCHEMES: https
        qos:
          ENABLED: true
        mailer:
          ENABLED: true
          PROTOCOL: smtp+starttls
          SMTP_PORT: 587
          FROM: admin@vzkn.eu
        cache:
          ADAPTER: redis
          HOST: redis://gitea-dragonfly:6379
        session:
          PROVIDER: redis
          PROVIDER_CONFIG: redis://gitea-dragonfly:6379
          COOKIE_SECURE: true
          DOMAIN: gitea.vzkn.eu
        attachment:
          STORAGE_TYPE: minio
        cron:
          ENABLED: true
        cron.git_gc_repos:
          ENABLED: true
          SCHEDULE: "@every 168h"
        metrics:
          ENABLED: true
          serviceMonitor:
            enabled: true
            namespace: monitoring
            additionalLabels:
              release: kube-prometheus-stack
        time:
          DEFAULT_UI_LOCATION: Europe/Warsaw
        federation:
          ENABLED: true
        lfs:
          STORAGE_TYPE: minio
        storage:
          STORAGE_TYPE: minio
          MINIO_ENDPOINT: s3.vzkn.eu
          MINIO_BUCKET: gitea
          MINIO_LOCATION: main
          MINIO_USE_SSL: true
        repo-archive:
          STORAGE_TYPE: minio
        actions:
          ENABLED: true
          STORAGE_TYPE: minio
      additionalConfigFromEnvs:
        - name: GITEA__DATABASE__PASSWD
          valueFrom:
            secretKeyRef:
            name: gitea-pguser-gitea
            key: password
      additionalConfigSources:
        - secret:
          secretName: gitea-secret
        # oauth:
        #   - name: Authentik
        #     provider: openidConnect
        #     key: x
        #     secret: x
        #     existingSecret: gitea-oauth-secret
        #     autoDiscoverUrl: "https://sso.vzkn.eu/.well-known/openid-configuration"
        #     useCustomUrls:
        #     customAuthUrl:
        #     customTokenUrl:
        #     customProfileUrl:
        #     customEmailUrl:

      podAnnotations:
        reloader.stakater.com/search: "true"

      livenessProbe:
        enabled: true
        tcpSocket:
          port: http
        initialDelaySeconds: 200
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 10
      readinessProbe:
        enabled: true
        tcpSocket:
          port: http
        initialDelaySeconds: 5
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 3
      startupProbe:
        enabled: false
        tcpSocket:
          port: http
        initialDelaySeconds: 60
        timeoutSeconds: 1
        periodSeconds: 10
        successThreshold: 1
        failureThreshold: 10

    valkey-cluster:
      enabled: false
    postgresql-ha:
      enabled: false
    postgresql:
      enabled: false
    redis-cluster:
      enabled: true
      usePassword: false
      persistence:
        enabled: false

    checkDeprecation: true
    test:
      enabled: true
      image:
        name: busybox
        tag: latest

  # valuesFrom:
  #   - targetPath: gitea.admin.password
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: adminPassword
  #   # Postgres Init DB
  #   - targetPath: gitea.config.database.USER
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: POSTGRES_USER
  #   - targetPath: gitea.config.database.PASSWD
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: POSTGRES_PASS
  #   - targetPath: gitea.config.database.NAME
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: POSTGRES_DB
  #   - targetPath: gitea.config.database.HOST
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: POSTGRES_HOST
  #   # Storage
  #   - targetPath: gitea.config.storage.MINIO_ACCESS_KEY_ID
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: GITEA_MINIO_ACCESS_KEY
  #   - targetPath: gitea.config.storage.MINIO_SECRET_ACCESS_KEY
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: GITEA_MINIO_SECRET_KEY
  #   # Mailer
  #   - targetPath: gitea.config.mailer.FROM
  #     kind: Secret
  #     name: gitea-secrets
  #     valuesKey: GITEA_SMTP_FROM
    # # OAuth (doesnt work)
    # - targetPath: gitea.oauth.secret
    #   kind: Secret
    #   name: gitea-secrets
    #   valuesKey: GITEA_OAUTH_CLIENT_SECRET

  # postRenderers:
  #   - kustomize:
  #       patchesStrategicMerge:
  #         - kind: Deployment
  #           apiVersion: apps/v1
  #           metadata:
  #             name: gitea
  #             namespace: development
  #           spec:
  #             template:
  #               spec:
  #                 initContainers:
  #                   - name: init-db
  #                     image: ghcr.io/lltr/postgres-initdb:15.2
  #                     imagePullPolicy: IfNotPresent
  #                     envFrom:
  #                       - secretRef:
  #                           name: gitea-secrets
