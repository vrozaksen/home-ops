---
authentication_backend:
  password_reset:
    disable: true
  refresh_interval: 1m
  file:
    path: '/config/users.yml'
    watch: false
    search:
      email: false
      case_insensitive: false
    password:
      algorithm: 'argon2'
      argon2:
        variant: 'argon2id'
        iterations: 3
        memory: 65536
        parallelism: 4
        key_length: 32
        salt_length: 16
      scrypt:
        iterations: 16
        block_size: 8
        parallelism: 1
        key_length: 32
        salt_length: 16
      pbkdf2:
        variant: 'sha512'
        iterations: 310000
        salt_length: 16
      sha2crypt:
        variant: 'sha512'
        iterations: 50000
        salt_length: 16
      bcrypt:
        variant: 'standard'
        cost: 12

log:
  level: "info"
  format: "text"
  file_path: ""
  keep_stdout: false

session:
  secret: "{{ .SESSION_SECRET }}"
  same_site: lax
  expiration: 1h
  inactivity: 5m
  remember_me: 1M
  cookies:
    - name: "${SECRET_DOMAIN}.session"
      domain: "${SECRET_DOMAIN}"
      authelia_url: "https://auth.${SECRET_DOMAIN}"
      default_redirection_url: "https://${SECRET_DOMAIN}"
  redis:
    host: dragonfly.database.svc.cluster.local
    database_index: 1

storage:
  encryption_key: "{{ .STORAGE_ENCRYPTION_KEY }}"
  postgres:
    address: postgres-rw.database.svc.cluster.local
    database: authelia
    username: "{{ .AUTHELIA_POSTGRES_USERNAME }}"
    password: "{{ .AUTHELIA_POSTGRES_PASSWORD }}"

access_control:
  default_policy: deny
  networks:
    - name: internal
      networks: [ "${LAN_CIDR}", "${CLUSTER_CIDR}", "${SERVICE_CIDR}" ]
    - name: cluster
      networks: [ "${CLUSTER_CIDR}" ]
  rules:
    # Allow free access from cluster network
    - domain: "*.${SECRET_DOMAIN}"
      networks:
        - "cluster"
      policy: bypass
    # 2FA if not on cluster network
    - domain: "*.${SECRET_DOMAIN}"
      policy: two_factor

totp:
  disable: false
  issuer: "Authelia (${SECRET_DOMAIN})"

webauthn:
  disable: false
  display_name: "Authelia (${SECRET_DOMAIN})"
  attestation_conveyance_preference: indirect
  user_verification: preferred
  timeout: 60s

duo_api:
  disable: true

notifier:
  disable_startup_check: true
  smtp:
    address: "{{ .SMTP_HOST }}"
    sender: "Authelia <authelia@${SECRET_DOMAIN}>"
    username: "{{ .SMTP_USER }}"
    password: "{{ .SMTP_PASS }}"
