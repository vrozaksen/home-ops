---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: sonarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  values:
    controllers:
      sonarr:
        replicas: 1
        strategy: Recreate
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/sonarr
              tag: 4.0.16.2942@sha256:a986ef3682f1b94e2832a31ace57057279bd4ffdf49190a1b5f9f8d3cef875f5
            env:
              TZ: Europe/Warsaw
              SONARR__APP__INSTANCENAME: Sonarr
              SONARR__APP__THEME: dark
              SONARR__AUTH__METHOD: External
              SONARR__AUTH__REQUIRED: DisabledForLocalAddresses
              SONARR__LOG__DBENABLED: "False"
              SONARR__LOG__LEVEL: info
              SONARR__SERVER__PORT: &port 80
              SONARR__UPDATE__BRANCH: develop
              SONARR__POSTGRES__HOST:
                valueFrom:
                  secretKeyRef:
                    name: &pg sonarr-pguser-sonarr
                    key: pgbouncer-host
              SONARR__POSTGRES__PORT:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: pgbouncer-port
              SONARR__POSTGRES__MAINDB:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: dbname
              SONARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: password
              SONARR__POSTGRES__USER:
                valueFrom:
                  secretKeyRef:
                    name: *pg
                    key: user
            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 300m
                memory: 512Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          http:
            port: *port
    route:
      app:
        annotations:
          gatus.home-operations.com/endpoint: |-
            group: downloads
        hostnames: ["{{ .Release.Name }}.vzkn.eu"]
        parentRefs:
          - name: envoy-internal
            namespace: network
    persistence:
      config:
        existingClaim: "{{ .Release.Name }}"
      scripts:
        type: configMap
        name: "{{ .Release.Name }}-configmap"
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      data:
        type: nfs
        server: aincrad.home.vzkn.eu
        path: /mnt/user/data
        globalMounts:
          - path: /data
      tmp:
        type: emptyDir
