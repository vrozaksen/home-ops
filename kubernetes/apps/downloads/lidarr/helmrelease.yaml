---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app lidarr
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      lidarr:
        labels:
          nfsMount: "true"
        annotations:
          reloader.stakater.com/auto: "true"
        containers:
          app:
            image:
              repository: ghcr.io/home-operations/lidarr
              tag: 2.11.2.4629@sha256:c5b3b5e0c9825555ff542272a9d18eec9b0d70cb80b610b8f4efc848dff54021
            env:
              LIDARR__APP__INSTANCENAME: Lidarr
              LIDARR__APP__THEME: dark
              LIDARR__AUTH__METHOD: External
              LIDARR__AUTH__REQUIRED: DisabledForLocalAddresses
              LIDARR__LOG__DBENABLED: "False"
              LIDARR__LOG__LEVEL: info
              LIDARR__POSTGRES__HOST: lidarr-pgbouncer.downloads.svc
              LIDARR__POSTGRES__MAINDB: *app
              LIDARR__POSTGRES__PASSWORD:
                valueFrom:
                  secretKeyRef:
                    name: lidarr-pguser-lidarr
                    key: password
              LIDARR__POSTGRES__PORT: "5432"
              LIDARR__POSTGRES__USER: *app
              LIDARR__SERVER__PORT: &port 80
              LIDARR__UPDATE__BRANCH: develop
              TZ: Europe/Warsaw
            envFrom:
              - secretRef:
                  name: lidarr-secret
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /ping
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 512Mi
              limits:
                memory: 2Gi
    initContainers:
      - name: download-script
        image: curlimages/curl:latest
        command:
          - sh
          - -c
          - |
            curl -o /custom-cont-init.d/script_init.bash https://example.com/path/to/script_init.bash
            chmod +x /custom-cont-init.d/script_init.bash
        volumeMounts:
          - name: custom-cont-init
            mountPath: /custom-cont-init.d
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        controller: *app
        ports:
          http:
            port: *port
    route:
      app:
        hostnames: ["{{ .Release.Name }}.vzkn.eu"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port
    persistence:
      config:
        existingClaim: *app
      config-cache:
        existingClaim: lidarr-cache
        globalMounts:
          - path: /config/MediaCover
          - path: /config/extended
          - path: /custom-cont-init.d
          - path: /custom-services.d
      scripts:
        type: configMap
        name: lidarr-scripts
        defaultMode: 0775
        globalMounts:
          - readOnly: true
      zfsdata:
        type: nfs
        server: aincrad.home.vzkn.eu
        path: /mnt/user/zfs_data
        globalMounts:
        - path: /zfs_data
      tmp:
        type: emptyDir
