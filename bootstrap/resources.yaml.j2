{% for namespace in ["external-secrets", "flux-system", "network"] %}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/namespace-v1.json
apiVersion: v1
kind: Namespace
metadata:
  name: {{ namespace }}
{% endfor %}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/secret-v1.json
apiVersion: v1
kind: Secret
metadata:
  name: bitwarden
  namespace: external-secrets
stringData:
  token: {{ ENV['BITWARDEN_KUBERNETES_TOKEN'] }}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/secret-v1.json
apiVersion: v1
kind: Secret
metadata:
  name: vzkn-eu-tls
  namespace: kube-system
  annotations:
    cert-manager.io/alt-names: '*.vzkn.eu,vzkn.eu'
    cert-manager.io/certificate-name: vzkn.eu
    cert-manager.io/common-name: vzkn.eu
    cert-manager.io/ip-sans: ""
    cert-manager.io/issuer-group: ""
    cert-manager.io/issuer-kind: ClusterIssuer
    cert-manager.io/issuer-name: letsencrypt-production
    cert-manager.io/uri-sans: ""
  labels:
    controller.cert-manager.io/fao: "true"
type: kubernetes.io/tls
data:
  tls.crt: {{ ENV['INGRESS_NGINX_TLS_CRT'] }}
  tls.key: {{ ENV['INGRESS_NGINX_TLS_KEY'] }}
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/yannh/kubernetes-json-schema/refs/heads/master/master/secret-v1.json
# external-secrets namespace needs cluster-secrets so it can bootstrap the ClusterSecretStore, which can then be used to get the cluster-secrets for the other namespaces
apiVersion: v1
kind: Secret
metadata:
  name: cluster-secrets
  namespace: external-secrets
stringData:
  {{ ENV['cluster_secrets'] | indent(2) | safe }}
