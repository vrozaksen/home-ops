---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Trivy Security Scan

on:
  pull_request:
    branches:
      - main
    paths:
      - 'kubernetes/**'
      - 'bootstrap/**'
      - 'talos/**'
  schedule:
    - cron: '0 6 * * 1' # Weekly on Monday at 6 AM UTC
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  security-events: write # For SARIF upload
  issues: write # For creating GitHub Issues

jobs:
  kubernetes-manifests:
    name: Scan Kubernetes Manifests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy scanner on kubernetes directory
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'kubernetes/'
          format: 'sarif'
          output: 'trivy-k8s-results.sarif'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln,misconfig,secret'
          ignore-unfixed: true
          hide-progress: true

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4e94bd11f71e507f7f87df81788dff88d1dacbfb # v4
        if: always()
        with:
          sarif_file: 'trivy-k8s-results.sarif'
          category: 'kubernetes-manifests'

      - name: Run Trivy scanner for GitHub Issues
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        with:
          scan-type: 'fs'
          scan-ref: 'kubernetes/'
          format: 'json'
          output: 'trivy-k8s-results.json'
          severity: 'HIGH,CRITICAL'
          scanners: 'vuln,misconfig,secret'
          ignore-unfixed: true
          hide-progress: true

      - name: Create GitHub Issues from findings
        if: github.event_name == 'schedule' || github.event_name == 'workflow_dispatch'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Parse JSON and create issues for critical findings
          if [ -f trivy-k8s-results.json ]; then
            CRITICAL_COUNT=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="CRITICAL")] | length' trivy-k8s-results.json)
            HIGH_COUNT=$(jq '[.Results[]?.Vulnerabilities[]? | select(.Severity=="HIGH")] | length' trivy-k8s-results.json)
            MISCONFIG_COUNT=$(jq '[.Results[]?.Misconfigurations[]? | select(.Severity=="CRITICAL" or .Severity=="HIGH")] | length' trivy-k8s-results.json)

            echo "Found: $CRITICAL_COUNT critical, $HIGH_COUNT high vulnerabilities, $MISCONFIG_COUNT misconfigurations"

            # Create issue if critical findings exist
            if [ "$CRITICAL_COUNT" -gt 0 ] || [ "$MISCONFIG_COUNT" -gt 5 ]; then
              TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M UTC")

              # Generate JSON summary file
              jq -r '.Results[] | select(.Vulnerabilities != null or .Misconfigurations != null) | {Target, Vulnerabilities: [.Vulnerabilities[]? | select(.Severity=="CRITICAL" or .Severity=="HIGH") | {ID: .VulnerabilityID, Severity, Title, PkgName}], Misconfigurations: [.Misconfigurations[]? | select(.Severity=="CRITICAL" or .Severity=="HIGH") | {ID, Severity, Title}]}' trivy-k8s-results.json | head -n 100 > findings-summary.json

              # Generate issue body using heredoc
              cat > issue-body.md <<EOF
          ## ðŸš¨ Trivy Security Scan Results

          **Scan Date:** ${TIMESTAMP}
          **Critical Vulnerabilities:** ${CRITICAL_COUNT}
          **High Vulnerabilities:** ${HIGH_COUNT}
          **Critical/High Misconfigurations:** ${MISCONFIG_COUNT}

          ### Summary
          Trivy detected security issues in Kubernetes manifests that require attention.

          ### Details
          \`\`\`json
          $(cat findings-summary.json)
          \`\`\`

          ### Recommendations
          1. Review critical vulnerabilities and update affected images
          2. Address misconfigurations flagged by Trivy
          3. Check [Security tab](https://github.com/${{ github.repository }}/security/code-scanning) for detailed SARIF report

          ---
          *Generated by [Trivy](https://trivy.dev) via GitHub Actions*
          EOF

              # Check if similar issue already exists (last 7 days)
              EXISTING_ISSUE=$(gh issue list --label "security,trivy" --state open --limit 1 --json number,createdAt --jq '.[0] | select(.createdAt > (now - 604800 | todate)) | .number')

              if [ -z "$EXISTING_ISSUE" ]; then
                gh issue create \
                  --title "ðŸ”’ Trivy Security Scan: ${CRITICAL_COUNT} Critical, ${HIGH_COUNT} High Vulnerabilities" \
                  --body-file issue-body.md \
                  --label "security,trivy,automated" \
                  --assignee "${{ github.repository_owner }}"
                echo "Created new issue"
              else
                echo "Recent issue #$EXISTING_ISSUE already exists, skipping creation"
              fi
            else
              echo "No critical findings, skipping issue creation"
            fi
          fi

  talos-manifests:
    name: Scan Talos Configurations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy scanner on talos directory
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'talos/'
          format: 'sarif'
          output: 'trivy-talos-results.sarif'
          severity: 'HIGH,CRITICAL'
          scanners: 'misconfig,secret'
          hide-progress: true

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4e94bd11f71e507f7f87df81788dff88d1dacbfb # v4
        if: always()
        with:
          sarif_file: 'trivy-talos-results.sarif'
          category: 'talos-config'

  bootstrap-manifests:
    name: Scan Bootstrap Configurations
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Run Trivy scanner on bootstrap directory
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8 # 0.33.1
        with:
          scan-type: 'fs'
          scan-ref: 'bootstrap/'
          format: 'sarif'
          output: 'trivy-bootstrap-results.sarif'
          severity: 'HIGH,CRITICAL'
          scanners: 'misconfig,secret'
          hide-progress: true

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@4e94bd11f71e507f7f87df81788dff88d1dacbfb # v4
        if: always()
        with:
          sarif_file: 'trivy-bootstrap-results.sarif'
          category: 'bootstrap-config'
