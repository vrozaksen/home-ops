# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app kafka
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    controllers:
      kafka:
        replicas: 1
        strategy: RollingUpdate
        annotations:
          reloader.stakater.com/auto: "true"
        initContainers:
          format-storage:
            image:
              repository: apache/kafka
              tag: 4.1.0@sha256:bff074a5d0051dbc0bbbcd25b045bb1fe84833ec0d3c7c965d1797dd289ec88f
              pullPolicy: IfNotPresent
            command:
              - /bin/bash
              - -c
              - |
                if [ ! -f /opt/kafka/logs/meta.properties ]; then
                  echo "Formatting Kafka storage..."
                  /opt/kafka/bin/kafka-storage.sh format \
                    --config /opt/kafka/config/kraft/server.properties \
                    --cluster-id sentry-kafka-cluster
                else
                  echo "Kafka storage already formatted"
                fi
            env:
              CLUSTER_ID: "sentry-kafka-cluster"
        containers:
          app:
            image:
              repository: apache/kafka
              tag: 4.1.0@sha256:bff074a5d0051dbc0bbbcd25b045bb1fe84833ec0d3c7c965d1797dd289ec88f
              pullPolicy: IfNotPresent
            env:
              # KRaft mode configuration (Apache Kafka official style)
              KAFKA_NODE_ID: "1"
              KAFKA_PROCESS_ROLES: "broker,controller"
              KAFKA_CONTROLLER_QUORUM_VOTERS: "1@localhost:9093"
              CLUSTER_ID: "sentry-kafka-cluster"

              # Network configuration
              KAFKA_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://localhost:9093"
              KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka.database.svc.cluster.local:9092"
              KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT"
              KAFKA_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
              KAFKA_INTER_BROKER_LISTENER_NAME: "PLAINTEXT"

              # Data directory
              KAFKA_LOG_DIRS: "/opt/kafka/logs"

              # Auto format storage if needed
              KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"

              # Basic configuration
              KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: "1"
              KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: "1"
              KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: "1"
              KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: "0"
              KAFKA_NUM_PARTITIONS: "3"

              # JVM options
              KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  tcpSocket:
                    port: &port 9092
                  initialDelaySeconds: 30
                  periodSeconds: 10
                  timeoutSeconds: 5
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 100m
                memory: 256Mi
              limits:
                memory: 1Gi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 100
        fsGroup: 100
        fsGroupChangePolicy: OnRootMismatch
    service:
      app:
        ports:
          kafka:
            port: *port
          controller:
            port: 9093
    persistence:
      tmpfs:
        type: emptyDir
        advancedMounts:
          kafka:
            app:
              - path: /opt/kafka/logs
                subPath: logs
            format-storage:
              - path: /opt/kafka/logs
                subPath: logs
