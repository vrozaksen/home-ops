controllers:
  main:
    type: job
    annotations:
      helm.sh/hook: "post-install,post-upgrade"
      helm.sh/hook-delete-policy: "before-hook-creation"
    job:
      backoffLimit: 0
      parallelism: {{ requiredEnv "NODE_COUNT" }}
    initContainers:
      data:
        image:
          repository: docker.io/library/alpine
          tag: latest
        command:
          - /bin/sh
          - -c
        args:
          - rm -rf /mnt/host_var/lib/rook
        securityContext:
          privileged: true
    containers:
      disk:
        image:
          repository: docker.io/library/alpine
          tag: latest
        command:
          - /bin/sh
          - -c
        args:
          - |
            apk add --no-cache findutils nvme-cli; # device-mapper util-linux zfs
            DISK="/dev/nvme0n1"

            #echo "=== Checking and Destroying Existing ZFS Pools ===";
            #for pool in $(zpool list -H -o name 2>/dev/null); do
            #  echo "Destroying ZFS pool: $pool";
            #  zpool destroy $pool;
            #done;

            #echo "=== Checking for zd devices and wiping them ===";
            #for zd in $(ls /dev/zd* 2>/dev/null); do
            #  echo "Wiping ZFS device: $zd";
            #  dd if=/dev/zero of="$zd" bs=1M count=100 oflag=direct || echo "Failed to wipe $zd";
            #done;

            echo "=== Wiping $DISK ===";
            #dd if=/dev/zero of="$DISK" bs=1M count=100 oflag=direct;
            #blkdiscard $DISK || echo "blkdiscard not supported or disk is busy";
            #wipefs -a $DISK || echo "Wipefs failed";
            #partprobe $DISK || echo "Kernel not updated, you might need a reboot";

            #echo "=== Wiping $DISK ===";
            nvme format --lbaf=1 $DISK --force;
            nvme format --block-size=4096 $DISK --force;
        securityContext:
          privileged: true
    pod:
      restartPolicy: Never
defaultPodOptions:
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: DoNotSchedule
      labelSelector:
        matchLabels:
          app.kubernetes.io/name: wipe-rook
persistence:
  host-var:
    type: hostPath
    hostPath: /var
    hostPathType: Directory
    globalMounts:
      - path: /mnt/host_var
  host-dev:
    type: hostPath
    hostPath: /dev/disk/by-id
    hostPathType: Directory
    globalMounts:
      - path: /dev/disk/by-id
